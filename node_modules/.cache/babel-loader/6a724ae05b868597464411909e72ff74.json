{"ast":null,"code":"import { shuffleArray } from \"./utils\";\nimport data from '../data.json';\nexport let Difficulty;\n\n(function (Difficulty) {\n  Difficulty[\"EASY\"] = \"easy\";\n  Difficulty[\"MEDIUM\"] = \"medium\";\n  Difficulty[\"HARD\"] = \"hard\";\n})(Difficulty || (Difficulty = {}));\n\nconst qeust = data.question;\nconsole.log(quest);\nexport const fetchQuizQuestions = async (amount, difficulty) => {\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\n  const data = await (await fetch(endpoint)).json(); //console.log(data); \n\n  return data.results.map(question => ({ ...question,\n    answers: shuffleArray([...question.incorrect_answers, question.correct_answer])\n  }));\n};","map":{"version":3,"sources":["C:/Users/rokis/OneDrive/Stalinis kompiuteris/TSR/typeapp/src/components/API.ts"],"names":["shuffleArray","data","Difficulty","qeust","question","console","log","quest","fetchQuizQuestions","amount","difficulty","endpoint","fetch","json","results","map","answers","incorrect_answers","correct_answer"],"mappings":"AACA,SAASA,YAAT,QAA6B,SAA7B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAYA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAKZ,MAAMC,KAAK,GAAIF,IAAD,CAAOG,QAArB;AACAC,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,OAAO,MAAMC,kBAAkB,GAAG,OAAMC,MAAN,EAAqBC,UAArB,KAA8C;AAC5E,QAAMC,QAAQ,GAAI,sCAAqCF,MAAO,eAAcC,UAAW,gBAAvF;AACA,QAAMT,IAAI,GAAI,MAAK,CAAC,MAAMW,KAAK,CAACD,QAAD,CAAZ,EAAwBE,IAAxB,EAAnB,CAF4E,CAG5E;;AACC,SAAOZ,IAAI,CAACa,OAAL,CAAaC,GAAb,CAAkBX,QAAD,KACpB,EACI,GAAGA,QADP;AAIIY,IAAAA,OAAO,EAAEhB,YAAY,CAAC,CAAC,GAAGI,QAAQ,CAACa,iBAAb,EAAgCb,QAAQ,CAACc,cAAzC,CAAD;AAJzB,GADoB,CAAjB,CAAP;AASJ,CAbM","sourcesContent":["import { type } from \"os\";\r\nimport { shuffleArray } from \"./utils\";\r\nimport data from '../data.json';\r\nexport type Question = {\r\n    category:string;\r\n    correct_answer: string;\r\n    difficulty:string;\r\n    incorrect_answers:string[];\r\n    question:string;\r\n    type:string;\r\n};\r\n\r\nexport type QuestionState = Question & {answers:string[]};\r\n\r\nexport enum Difficulty{\r\nEASY = \"easy\",\r\nMEDIUM = \"medium\",\r\nHARD = \"hard\",\r\n}\r\nconst qeust = (data).question;\r\nconsole.log(quest);\r\nexport const fetchQuizQuestions = async(amount:number, difficulty:Difficulty) =>{\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\r\n    const data =  await(await fetch(endpoint)).json();\r\n    //console.log(data); \r\n     return data.results.map((question: Question)=>(\r\n         {\r\n             ...question,\r\n         \r\n           \r\n             answers: shuffleArray([...question.incorrect_answers, question.correct_answer]),\r\n         }\r\n     ));\r\n   \r\n};"]},"metadata":{},"sourceType":"module"}